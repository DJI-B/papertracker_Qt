name: CMake on a single platform

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    # 安装Qt - 这是唯一需要外部安装的依赖
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        modules: 'qtwebsockets qtserialport'

    # 配置CMake - 所有其他依赖将通过FetchContent自动下载
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "Visual Studio 17 2022" -A x64

    # 构建项目
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # 安装依赖文件（如模型文件、DLL等）
    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # 测试（如果需要的话）
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
      continue-on-error: true

    # 上传构建产物
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PaperTracker-${{ env.BUILD_TYPE }}
        path: |
          ${{github.workspace}}/build/**/*.exe
          ${{github.workspace}}/build/**/*.dll
          ${{github.workspace}}/build/model/
          ${{github.workspace}}/build/translations/
        retention-days: 30

    # 飞书通知 - 构建失败时发送
    - name: Notify Feishu on failure
      if: failure()
      shell: bash
      run: |
        payload=$(cat <<'EOF'
        {
          "msg_type": "interactive",
          "card": {
            "elements": [
              {
                "tag": "div",
                "text": {
                  "content": "🚨 **PaperTracker CI Build Failed**",
                  "tag": "lark_md"
                }
              },
              {
                "tag": "div",
                "fields": [
                  {
                    "is_short": true,
                    "text": {
                      "content": "**Repository:**\nREPO_NAME",
                      "tag": "lark_md"
                    }
                  },
                  {
                    "is_short": true,
                    "text": {
                      "content": "**Branch:**\nBRANCH_NAME",
                      "tag": "lark_md"
                    }
                  },
                  {
                    "is_short": true,
                    "text": {
                      "content": "**Author:**\nAUTHOR_NAME",
                      "tag": "lark_md"
                    }
                  },
                  {
                    "is_short": true,
                    "text": {
                      "content": "**Commit:**\n`COMMIT_SHA`",
                      "tag": "lark_md"
                    }
                  }
                ]
              },
              {
                "tag": "action",
                "actions": [
                  {
                    "tag": "button",
                    "text": {
                      "content": "View Details",
                      "tag": "plain_text"
                    },
                    "url": "ACTION_URL",
                    "type": "primary"
                  }
                ]
              }
            ],
            "header": {
              "title": {
                "content": "CI Build Failure",
                "tag": "plain_text"
              },
              "template": "red"
            }
          }
        }
EOF
        )
        
        # Replace placeholders with actual values
        payload=$(echo "$payload" | sed "s|REPO_NAME|${{ github.repository }}|g")
        payload=$(echo "$payload" | sed "s|BRANCH_NAME|${{ github.ref_name }}|g")
        payload=$(echo "$payload" | sed "s|AUTHOR_NAME|${{ github.actor }}|g")
        payload=$(echo "$payload" | sed "s|COMMIT_SHA|${{ github.sha }}|g")
        payload=$(echo "$payload" | sed "s|ACTION_URL|${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|g")
        
        curl -X POST "${{ secrets.FEISHU_WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -d "$payload"
